{"version":3,"file":"static/js/367.e631ff0e.chunk.js","mappings":"8QAEaA,EAAaC,EAAAA,GAAAA,GAAH,kIASVC,EAAYD,EAAAA,GAAAA,GAAH,uCAITE,EAAYF,EAAAA,GAAAA,EAAH,0C,SCoBtB,EA9Ba,WACT,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACZ,WAAyBF,GAAzB,uFAEoB,sCACA,mCAHpB,SAI+BG,EAAAA,EAAAA,IAAA,UAFX,uCAEW,OAAmBH,EAAnB,4BADX,qCAHpB,OAIcI,EAJd,OAKQC,QAAQC,IAAIF,EAASG,KAAKC,MAE3BT,EAAUK,EAASG,KAAKC,MAP/B,kDASQH,QAAQC,IAAI,KAAMG,SAT1B,0DADY,yBAAC,SAAD,2BAaZC,CAAUV,EAEb,GAAE,CAACA,KAGG,SAACP,EAAD,UAAaK,EAAOa,KAAI,SAAAC,GAAK,OAAI,UAACjB,EAAD,WACnCiB,EAAMC,cACD,gBAAKC,IAAG,0CAAqCF,EAAMC,cAAgBE,IAAI,MACvE,gBAAKD,IAAI,6EAA6EC,IAAI,GAAGC,MAAM,MAAMC,OAAO,SACtH,wBAAKL,EAAMM,QACX,UAACtB,EAAD,yBAAuBgB,EAAMO,eALuBP,EAAMQ,QAA1B,KAMvC,C","sources":["components/styles/Cast.styled.js","components/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nlist-style: none;\ngap: 15px;\nmargin-left: auto;\nmargin-right: auto;\n`\n\nexport const ActorItem = styled.li`\nwidth: 200px;\n`\n\nexport const Character = styled.p`\nfont-size: 12px;\n`","import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { ActorItem, ActorsList, Character } from './styles/Cast.styled';\n\nconst Cast = () => {\n    const [actors, setActors] = useState([]);\n    const { movieId } = useParams(); \n\n    useEffect(() => {\n        async function fetchData(movieId) {\n            try {\n                const url = 'https://api.themoviedb.org/3/movie/';\n                const key = '6bf6ef2ab5ece9f25b4bdae1dc149130';\n                const response = await axios.get(`${url}${movieId}/credits?api_key=${key}`);\n                console.log(response.data.cast)\n                \n               setActors(response.data.cast);\n            } catch (error) {\n                console.log(error.message);\n            }\n        }\n        fetchData(movieId);\n    \n    }, [movieId]);\n\n    \n    return <ActorsList>{actors.map(actor => <ActorItem key={actor.cast_id}>\n        {actor.profile_path\n            ? <img src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`} alt=\"\" />\n            : <img src=\"http://tinleychamber.org/wp-content/uploads/2019/01/no-image-available.png\" alt=\"\" width=\"200\" height=\"300\"/>}\n        <h4>{actor.name}</h4>\n        <Character>Character: {actor.character}</Character></ActorItem>)}</ActorsList>\n}\n\nexport default Cast; "],"names":["ActorsList","styled","ActorItem","Character","useState","actors","setActors","movieId","useParams","useEffect","axios","response","console","log","data","cast","message","fetchData","map","actor","profile_path","src","alt","width","height","name","character","cast_id"],"sourceRoot":""}